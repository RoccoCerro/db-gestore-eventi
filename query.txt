- Selezionare tutti gli eventi gratis, cioè con prezzo nullo (19)
SELECT * FROM `events` WHERE(price IS NULL);

- Selezionare tutte le location in ordine alfabetico (82)
SELECT * FROM `locations` ORDER BY name;

- Selezionare tutti gli eventi che costano meno di 20 euro e durano meno di 3 ore (38)
SELECT * FROM `events` WHERE (price < 20 AND duration < '03:00:00');

- Selezionare tutti gli eventi di dicembre 2023 (25)
SELECT * FROM `events` WHERE (MONTH(start) = 12 AND YEAR(start) = 2023);

- Selezionare tutti gli eventi con una durata maggiore alle 2 ore (823)
SELECT * FROM `events` WHERE ( HOUR(duration) > 2);

- Selezionare tutti gli eventi, mostrando nome, data di inizio, ora di inizio, ora di fine e durata totale (1040)
SELECT name, 
DATE(start) AS DATA_DI_INIZIO,
CONCAT(HOUR(start), ':', MINUTE(start)) AS ORA_DI_INIZIO, 
CONCAT(HOUR(duration), ':', MINUTE(duration)) AS DURATA_TOTALE, 
CONCAT(HOUR(ADDTIME(start, duration)), ':', MINUTE(ADDTIME(start, duration))) AS ORA_DI_FINE
FROM `events`;

- Selezionare tutti gli eventi aggiunti da “Fabiano Lombardo” (id: 1202) (132)
SELECT events.*, users.first_name, users.last_name
FROM `events`
INNER JOIN `users` ON events.user_id = users.id
WHERE (users.first_name = 'Fabiano' AND users.last_name = 'Lombardo');

- Selezionare il numero totale di eventi per ogni fascia di prezzo (81)
SELECT COUNT(name) AS EVENTI, price 
FROM `events`
GROUP BY price;

- Selezionare tutti gli utenti admin ed editor (9)
SELECT * 
FROM `users`
INNER JOIN roles ON roles.id = users.role_id
WHERE (roles.name = 'admin' OR roles.name = 'editor');

- Selezionare tutti i concerti (eventi con il tag “concerti”) (72)
SELECT events.*
FROM `events`
JOIN event_tag ON event_tag.event_id = events.id
JOIN tags ON event_tag.tag_id = tags.id
WHERE tags.name = 'concerti';

- Selezionare tutti i tag e il prezzo medio degli eventi a loro collegati (11)
SELECT tags.name, AVG(price) 
FROM `tags`
JOIN event_tag ON event_tag.tag_id = tags.id
JOIN events ON event_tag.event_id = events.id
GROUP BY tags.name;

- Selezionare tutte le location e mostrare quanti eventi si sono tenute in ognuna di esse (82)
SELECT `locations`.`name`, COUNT(events.name) AS EVENTI_TOTALI
FROM `locations`
INNER JOIN events ON events.location_id = locations.id
GROUP BY locations.name;

- Selezionare tutti i partecipanti per l’evento “Concerto Classico Serale” (slug: concerto-classico-serale, id: 34) (30)
SELECT users.first_name, users.last_name, events.name
FROM `users`
JOIN `bookings` ON bookings.user_id = users.id
JOIN `events` ON events.id = bookings.event_id
WHERE events.name = 'Concerto Classico Serale';

- Selezionare tutti i partecipanti all’evento “Festival Jazz Estivo” (slug: festival-jazz-estivo, id: 2) specificando nome e cognome (13)
SELECT users.first_name, users.last_name, events.name, events.id
FROM `users`
JOIN `bookings` ON bookings.user_id = users.id
JOIN `events` ON events.id = bookings.event_id
WHERE events.name = 'Festival Jazz Estivo';

- Selezionare tutti gli eventi sold out (dove il totale delle prenotazioni è uguale ai biglietti totali per l’evento) (18)
SELECT events.name, events.total_tickets, prenotazioni
FROM `events`
JOIN (
	SELECT bookings.event_id, COUNT(bookings.id) AS prenotazioni
    FROM bookings
    GROUP BY bookings.event_id
) `bookings` ON events.id = bookings.event_id
WHERE prenotazioni = events.total_tickets;

- Selezionare tutte le location in ordine per chi ha ospitato più eventi (82)
SELECT `locations`.`name` , eventi
FROM `locations`
JOIN (
	SELECT events.location_id, COUNT(events.name) AS eventi
    FROM events
    GROUP BY events.location_id
) `events` ON `events`.`location_id` = `locations`.`id`
ORDER BY eventi DESC;

- Selezionare tutti gli utenti che si sono prenotati a più di 70 eventi (74)
SELECT users.first_name, users.last_name, Prenotazioni_totali
FROM `users`
JOIN(
	SELECT bookings.user_id, COUNT(bookings.id) AS Prenotazioni_totali
    FROM bookings
    GROUP BY bookings.user_id
) bookings ON bookings.user_id = users.id
WHERE Prenotazioni_totali > 70;

- Selezionare tutti gli eventi, mostrando il nome dell’evento, il nome della location, il numero di prenotazioni e il totale di biglietti ancora disponibili per l’evento (1040)